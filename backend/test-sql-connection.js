// Script para testar se est√° usando SQL Server
console.log('üîç Testando se backend est√° usando SQL Server...\n');

async function testSQLConnection() {
  try {
    // Testar endpoint de usu√°rios
    const response = await fetch('http://SEU_SERVIDOR/api/users', {
      headers: {
        'Authorization': 'Bearer SEU_TOKEN_AQUI'
      }
    });
    
    if (response.ok) {
      const users = await response.json();
      console.log(`‚úÖ Usu√°rios encontrados: ${users.length}`);
      console.log('üìä Dados dos usu√°rios:');
      users.forEach(user => {
        console.log(`   - ${user.name} (${user.role})`);
      });
    } else {
      console.log(`‚ùå Erro na API: ${response.status}`);
    }

    // Testar logs para ver se est√° gravando no SQL
    const logsResponse = await fetch('http://SEU_SERVIDOR/api/logs', {
      headers: {
        'Authorization': 'Bearer SEU_TOKEN_AQUI'  
      }
    });
    
    if (logsResponse.ok) {
      const logs = await logsResponse.json();
      console.log(`\nüìã Logs encontrados: ${logs.length}`);
      console.log('üîç √öltimos 3 logs:');
      logs.slice(0, 3).forEach(log => {
        console.log(`   - ${log.action} por ${log.who} em ${log.at}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar:', error.message);
  }
}

testSQLConnection();
